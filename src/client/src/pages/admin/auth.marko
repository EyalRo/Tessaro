$ const { title = "Admin Authentication", errorMessage = null } = input;

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>${title}</title>
    <style>
      :root {
        color-scheme: dark;
        font-family: "Inter", system-ui, -apple-system, Segoe UI, sans-serif;
        background: radial-gradient(circle at top, #0f172a 0%, #020617 100%);
        color: #e2e8f0;
      }

      body {
        margin: 0;
        min-height: 100vh;
        display: grid;
        place-items: center;
        padding: 1.5rem;
      }

      main {
        width: min(420px, 100%);
        padding: 2.5rem 2.25rem;
        background: rgba(15, 23, 42, 0.85);
        border-radius: 20px;
        border: 1px solid rgba(59, 130, 246, 0.25);
        box-shadow: 0 40px 80px -20px rgba(37, 99, 235, 0.35);
        backdrop-filter: blur(14px);
      }

      h1 {
        margin: 0;
        font-size: clamp(1.875rem, 5vw, 2.5rem);
        letter-spacing: -0.03em;
      }

      p.lead {
        margin: 1rem 0 2rem;
        color: rgba(226, 232, 240, 0.85);
        line-height: 1.6;
      }

      button {
        width: 100%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.625rem;
        border-radius: 999px;
        border: none;
        padding: 0.95rem 1.25rem;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        background: linear-gradient(120deg, #3b82f6 0%, #6366f1 50%, #8b5cf6 100%);
        color: #f8fafc;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
      }

      button:hover {
        transform: translateY(-1px) scale(1.01);
        box-shadow: 0 20px 40px -18px rgba(99, 102, 241, 0.65);
      }

      button:disabled {
        opacity: 0.6;
        cursor: wait;
        box-shadow: none;
      }

      .status-row {
        margin-top: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 0.95rem;
      }

      .status-row span {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
      }

      .status-icon {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background: #22c55e;
        box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.2);
      }

      .status-message {
        color: rgba(125, 211, 252, 0.8);
      }

      .error-message {
        margin-top: 1.5rem;
        padding: 0.875rem 1rem;
        border-radius: 12px;
        background: rgba(239, 68, 68, 0.12);
        border: 1px solid rgba(248, 113, 113, 0.25);
        color: #fecaca;
        font-size: 0.95rem;
        display: none;
      }

      .error-message.is-visible {
        display: block;
      }
    </style>
  </head>
  <body>
    <main>
      <h1>Administrator Access</h1>
      <p class="lead">
        Sign in with the built-in Tessaro admin profile to unlock dashboards,
        service controls, and organization overviews.
      </p>

      <button id="admin-sign-in" type="button">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" aria-hidden="true">
          <path
            d="M10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18C14.4183 18 18 14.4183 18 10"
            stroke="currentColor"
            stroke-width="1.6"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M7.5 10H17.5M17.5 10L14.5 7M17.5 10L14.5 13"
            stroke="currentColor"
            stroke-width="1.6"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
        Continue as Admin
      </button>

      <div class="status-row">
        <span>
          <span class="status-icon" aria-hidden="true"></span>
          Default account ready
        </span>
        <span class="status-message" id="status-message"></span>
      </div>

      <div id="error-message" class=[
        "error-message",
        errorMessage ? "is-visible" : null,
      ]>
        ${errorMessage}
      </div>
    </main>

    <script>
      const button = document.getElementById("admin-sign-in");
      const status = document.getElementById("status-message");
      const errorMessage = document.getElementById("error-message");

      function setLoading(isLoading) {
        button.disabled = isLoading;
        status.textContent = isLoading ? "Authorizingâ€¦" : "";
      }

      function showError(message) {
        errorMessage.textContent = message;
        errorMessage.classList.add("is-visible");
      }

      button.addEventListener("click", async () => {
        setLoading(true);
        errorMessage.classList.remove("is-visible");

        try {
          const response = await fetch("/api/auth/login", {
            method: "POST",
            headers: { "content-type": "application/json" },
            credentials: "include",
            body: JSON.stringify({ provider: "default-admin" }),
          });

          if (!response.ok) {
            const payload = await response.json().catch(() => ({}));
            const message = payload?.message || "Sign-in failed. Please try again.";
            showError(message);
            setLoading(false);
            return;
          }

          status.textContent = "Welcome back, admin.";
          window.location.href = "/admin";
        } catch (error) {
          console.error("Auth error", error);
          showError("Unexpected error. Check your connection and retry.");
          setLoading(false);
        }
      });
    </script>
  </body>
</html>
